---
interface Props {
  title: string;
  description: string;
  link?: string;
  date: string;
  index: number;
}

const { title, description, more, date, index } = Astro.props;
---

<div
  class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"
>
</div>
<time
  class="mb-1 text-sm font-normal leading-none text-sky-200/90"
  >{date}</time
>
<h3 class="text-lg font-semibold text-yellow-200 mt-2">
  {title}
</h3>
<p class="mb-4 text-base font-normal text-gray-200 text-pretty">
  {description}
</p>
{more && (
  <div>
    <button
    id={`accordion-button-${index}`}
      type="button"
      class="accordion-button flex items-center justify-between px-4 py-2 text-sm font-medium text-gray-500 border rounded-full border-gray-200 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 gap-3"
      aria-expanded="false"
      aria-controls="accordion-content"
      onclick={`toggleDropdown(${index})`}
    >
      Saber más
      <svg
  class="w-4 h-4 shrink-0"
  aria-hidden="true"
  xmlns="http://www.w3.org/2000/svg"
  fill="none"
  viewBox="0 0 20 20"
>
  <path
    stroke="currentColor"
    stroke-linecap="round"
    stroke-linejoin="round"
    stroke-width="2"
    d="M7.529 7.988a2.502 2.502 0 0 1 5 .191A2.441 2.441 0 0 1 10 10.582V12m-.01 3.008H10M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
  />
</svg>
    </button>
    
    <!-- Contenido del acordeón -->
    <div
      id={`accordion-content-${index}`}
      class="accordion-content hidden p-5"
      aria-labelledby={`accordion-button-${index}`}
    >
      <p class="mb-2 text-gray-500 dark:text-gray-400">
       {more}
      </p>
    </div>
  </div>
)}
<script is:inline>
  function toggleDropdown(selectedIndex) {
    const allAccordions = document.querySelectorAll('.accordion-content');
    const selectedContent = document.getElementById(`accordion-content-${selectedIndex}`);
    const selectedButton = document.getElementById(`accordion-button-${selectedIndex}`);
    
    // Determina si el acordeón seleccionado estaba abierto antes del clic
    const wasSelectedExpanded = selectedButton.getAttribute('aria-expanded') === 'true';

    // Primero cierra todos los acordeones
    allAccordions.forEach((content, index) => {
      const button = document.querySelector(`#accordion-button-${index}`);
      content.classList.add('hidden');
      button.setAttribute('aria-expanded', 'false');
    });

    // Luego, si el acordeón seleccionado estaba cerrado antes del clic, ábrelo
    if (!wasSelectedExpanded) {
      selectedContent.classList.remove('hidden');
      selectedButton.setAttribute('aria-expanded', 'true');
    }
  }
</script>

